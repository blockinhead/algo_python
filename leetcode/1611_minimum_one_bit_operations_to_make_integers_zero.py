class Solution:
    def minimumOneBitOperations(self, n: int) -> int:
        if n == 0:
            return 0

        k = 0
        while 2**k <= n:
            k += 1
        k -= 1

        return 2 ** (k + 1) - 1 - self.minimumOneBitOperations(2 ** k ^ n)

# посмотрим на случай, когда есть одна единица в старшем разряде и всё остальное - нули
# дойти он неё до нуля по заданным правилам - это так же как дойти от нуля до этой единицы -
# если выписать, то видно, что это перебрать все числа. а их там 2**(k + 1) - 1
# но начинаем мы перебирать числа не с одной единицы. там может внутри тоже есть единицы.
# то есть если выписать все числа в столбик, начинаем мы с середины, а не с самого верха
